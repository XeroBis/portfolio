name: Code Quality Checks

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  linting:
    name: Linting and Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"

      - name: Run Black (formatting check)
        run: black --check .

      - name: Run isort (import sorting check)
        run: isort --check-only .

      - name: Run Flake8 (linting)
        run: flake8 . --count --statistics --show-source

      - name: Run Pylint
        run: pylint apps/ mysite/ --output-format=colorized --exit-zero

  type-checking:
    name: Type Checking with mypy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"

      - name: Run mypy
        run: mypy apps/ mysite/ --config-file=pyproject.toml

  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"

      - name: Run pre-commit hooks
        run: |
          pre-commit run --all-files
