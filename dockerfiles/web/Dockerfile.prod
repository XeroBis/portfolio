# Stage 1: Base build stage
FROM public.ecr.aws/docker/library/python:3.10.12-slim-bullseye AS builder
RUN mkdir /app
WORKDIR /app

# Prevents Python from writing pyc files to disk
ENV PYTHONDONTWRITEBYTECODE=1
#Prevents Python from buffering stdout and stderr
ENV PYTHONUNBUFFERED=1

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

COPY pyproject.toml /app/

RUN uv pip install --system --no-cache .

# Stage 2: Production Stage
FROM public.ecr.aws/docker/library/python:3.10.12-slim-bullseye

RUN useradd -m -r appuser && \
   mkdir /app && \
   chown -R appuser /app

# Copy the Python dependencies from the builder stage
COPY --from=builder /usr/local/lib/python3.10/site-packages/ /usr/local/lib/python3.10/site-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

WORKDIR /app
COPY --chown=appuser:appuser . .

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1 

RUN apt-get update && apt-get install -y gettext

RUN chown -R appuser /app/static
USER appuser

CMD ["sh", "-c", "python manage.py collectstatic --noinput && python manage.py compilemessages && python manage.py migrate && python manage.py ensure_superuser && gunicorn --bind 0.0.0.0:8000 --workers 3 mysite.wsgi:application"]